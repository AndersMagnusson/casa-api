// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// Device device
// swagger:model device

type Device struct {

	// address
	Address string `json:"address,omitempty"`

	// model
	Model string `json:"model,omitempty"`

	// serial number
	SerialNumber string `json:"serialNumber,omitempty"`

	// snapshot Url
	SnapshotURL string `json:"snapshotUrl,omitempty"`

	// status
	Status *DeviceStatus `json:"status,omitempty"`

	// username
	Username string `json:"username,omitempty"`
}

/* polymorph device address false */

/* polymorph device model false */

/* polymorph device serialNumber false */

/* polymorph device snapshotUrl false */

/* polymorph device status false */

/* polymorph device username false */

// Validate validates this device
func (m *Device) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateStatus(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Device) validateStatus(formats strfmt.Registry) error {

	if swag.IsZero(m.Status) { // not required
		return nil
	}

	if m.Status != nil {

		if err := m.Status.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("status")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *Device) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Device) UnmarshalBinary(b []byte) error {
	var res Device
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
