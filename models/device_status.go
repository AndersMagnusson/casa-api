// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// DeviceStatus device status
// swagger:model deviceStatus

type DeviceStatus struct {

	// credential
	Credential bool `json:"credential,omitempty"`

	// error
	Error bool `json:"error,omitempty"`

	// has status
	HasStatus bool `json:"hasStatus,omitempty"`

	// last status check
	LastStatusCheck strfmt.DateTime `json:"lastStatusCheck,omitempty"`

	// message
	Message string `json:"message,omitempty"`

	// network
	Network bool `json:"network,omitempty"`

	// status code
	StatusCode int64 `json:"statusCode,omitempty"`
}

/* polymorph deviceStatus credential false */

/* polymorph deviceStatus error false */

/* polymorph deviceStatus hasStatus false */

/* polymorph deviceStatus lastStatusCheck false */

/* polymorph deviceStatus message false */

/* polymorph deviceStatus network false */

/* polymorph deviceStatus statusCode false */

// Validate validates this device status
func (m *DeviceStatus) Validate(formats strfmt.Registry) error {
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (m *DeviceStatus) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DeviceStatus) UnmarshalBinary(b []byte) error {
	var res DeviceStatus
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
