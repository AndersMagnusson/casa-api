// Code generated by go-swagger; DO NOT EDIT.

package alarms

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"casa/src/server/models"
)

// ListAlarmsOKCode is the HTTP code returned for type ListAlarmsOK
const ListAlarmsOKCode int = 200

/*ListAlarmsOK Ok

swagger:response listAlarmsOK
*/
type ListAlarmsOK struct {

	/*
	  In: Body
	*/
	Payload models.Alarms `json:"body,omitempty"`
}

// NewListAlarmsOK creates ListAlarmsOK with default headers values
func NewListAlarmsOK() *ListAlarmsOK {
	return &ListAlarmsOK{}
}

// WithPayload adds the payload to the list alarms o k response
func (o *ListAlarmsOK) WithPayload(payload models.Alarms) *ListAlarmsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list alarms o k response
func (o *ListAlarmsOK) SetPayload(payload models.Alarms) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListAlarmsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		payload = make(models.Alarms, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

/*ListAlarmsDefault error

swagger:response listAlarmsDefault
*/
type ListAlarmsDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewListAlarmsDefault creates ListAlarmsDefault with default headers values
func NewListAlarmsDefault(code int) *ListAlarmsDefault {
	if code <= 0 {
		code = 500
	}

	return &ListAlarmsDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the list alarms default response
func (o *ListAlarmsDefault) WithStatusCode(code int) *ListAlarmsDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the list alarms default response
func (o *ListAlarmsDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the list alarms default response
func (o *ListAlarmsDefault) WithPayload(payload *models.Error) *ListAlarmsDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list alarms default response
func (o *ListAlarmsDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListAlarmsDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
