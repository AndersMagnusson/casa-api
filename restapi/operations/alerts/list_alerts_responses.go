// Code generated by go-swagger; DO NOT EDIT.

package alerts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"casa/src/server/models"
)

// ListAlertsOKCode is the HTTP code returned for type ListAlertsOK
const ListAlertsOKCode int = 200

/*ListAlertsOK Ok

swagger:response listAlertsOK
*/
type ListAlertsOK struct {

	/*
	  In: Body
	*/
	Payload models.Alerts `json:"body,omitempty"`
}

// NewListAlertsOK creates ListAlertsOK with default headers values
func NewListAlertsOK() *ListAlertsOK {
	return &ListAlertsOK{}
}

// WithPayload adds the payload to the list alerts o k response
func (o *ListAlertsOK) WithPayload(payload models.Alerts) *ListAlertsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list alerts o k response
func (o *ListAlertsOK) SetPayload(payload models.Alerts) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListAlertsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		payload = make(models.Alerts, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

/*ListAlertsDefault error

swagger:response listAlertsDefault
*/
type ListAlertsDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewListAlertsDefault creates ListAlertsDefault with default headers values
func NewListAlertsDefault(code int) *ListAlertsDefault {
	if code <= 0 {
		code = 500
	}

	return &ListAlertsDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the list alerts default response
func (o *ListAlertsDefault) WithStatusCode(code int) *ListAlertsDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the list alerts default response
func (o *ListAlertsDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the list alerts default response
func (o *ListAlertsDefault) WithPayload(payload *models.Error) *ListAlertsDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list alerts default response
func (o *ListAlertsDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListAlertsDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
