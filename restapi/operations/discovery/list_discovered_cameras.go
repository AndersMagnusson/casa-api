// Code generated by go-swagger; DO NOT EDIT.

package discovery

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// ListDiscoveredCamerasHandlerFunc turns a function with the right signature into a list discovered cameras handler
type ListDiscoveredCamerasHandlerFunc func(ListDiscoveredCamerasParams) middleware.Responder

// Handle executing the request and returning a response
func (fn ListDiscoveredCamerasHandlerFunc) Handle(params ListDiscoveredCamerasParams) middleware.Responder {
	return fn(params)
}

// ListDiscoveredCamerasHandler interface for that can handle valid list discovered cameras params
type ListDiscoveredCamerasHandler interface {
	Handle(ListDiscoveredCamerasParams) middleware.Responder
}

// NewListDiscoveredCameras creates a new http.Handler for the list discovered cameras operation
func NewListDiscoveredCameras(ctx *middleware.Context, handler ListDiscoveredCamerasHandler) *ListDiscoveredCameras {
	return &ListDiscoveredCameras{Context: ctx, Handler: handler}
}

/*ListDiscoveredCameras swagger:route GET /discovery discovery listDiscoveredCameras

List discovered Axis devices

*/
type ListDiscoveredCameras struct {
	Context *middleware.Context
	Handler ListDiscoveredCamerasHandler
}

func (o *ListDiscoveredCameras) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewListDiscoveredCamerasParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
